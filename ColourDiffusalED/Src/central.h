//$file${.::central.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: ColourDiffusal.qm
// File:  ${.::central.h}
//
// This code has been generated by QM 5.3.0 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open source software: you can redistribute it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
//
// NOTE:
// Alternatively, this generated code may be distributed under the terms
// of Quantum Leaps commercial licenses, which expressly supersede the GNU
// General Public License and are specifically designed for licensees
// interested in retaining the proprietary status of their code.
//
// Contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${.::central.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#ifndef CENTRAL_H
#define CENTRAL_H

#include "qpc.h"    /* QP/C framework API */
#include "veml6040.h"
#include "tickerkeeper.h"

/* ask QM to declare the Central class --------------------------------------*/
//$declare${AOs::Central} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AOs::Central} ............................................................
typedef struct {
// protected:
    QActive super;

// private:
    VEML6040RawData_TypeDef rgbCount;
    uint16_t hue;
    bool ledon;
    TickerKeeper tk;
} Central;

// protected:
QState Central_initial(Central * const me, void const * const par);
QState Central_started(Central * const me, QEvt const * const e);
QState Central_percentdata(Central * const me, QEvt const * const e);
QState Central_rawdata(Central * const me, QEvt const * const e);
//$enddecl${AOs::Central} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

extern QActive * const AO_Central; /* opaque pointer to the Blinky AO */
//$declare${AOs::Central_ctor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AOs::Central_ctor} .......................................................
void Central_ctor(void);
//$enddecl${AOs::Central_ctor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#endif /* CENTRAL_H */
